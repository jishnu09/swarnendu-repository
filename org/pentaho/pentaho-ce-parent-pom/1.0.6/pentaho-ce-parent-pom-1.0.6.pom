<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.pentaho</groupId>
  <artifactId>pentaho-ce-parent-pom</artifactId>
  <version>1.0.6</version>
  <packaging>pom</packaging>
  
  <name>Pentaho Community Edition Project Parent Pom</name>
  <description>a parent pom for general configuration of Pentaho sponsored open source projects</description>
  <url>http://www.pentaho.org</url>
  
  <licenses>
    <license>
      <name>The MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
  
    <pentaho.resolve.repo>http://nexus.pentaho.org/content/groups/omni/</pentaho.resolve.repo>
    <pentaho.public.release.repo>http://nexus.pentaho.org/content/repositories/public-release/</pentaho.public.release.repo>
    <pentaho.public.snapshot.repo>http://nexus.pentaho.org/content/repositories/public-snapshot/</pentaho.public.snapshot.repo>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <plugin.org.apache.maven.plugins.maven-clean-plugin.version>2.4.1</plugin.org.apache.maven.plugins.maven-clean-plugin.version>
    <plugin.org.apache.maven.plugins.maven-install-plugin.version>2.3.1</plugin.org.apache.maven.plugins.maven-install-plugin.version>
    <plugin.org.apache.maven.plugins.maven-deploy-plugin.version>2.7</plugin.org.apache.maven.plugins.maven-deploy-plugin.version>
    <plugin.org.apache.maven.plugins.maven-release-plugin.version>2.4.1</plugin.org.apache.maven.plugins.maven-release-plugin.version>
    <plugin.org.apache.maven.plugins.maven-site-plugin.version>3.3</plugin.org.apache.maven.plugins.maven-site-plugin.version>
    <plugin.org.codehaus.gmavenplus.gmavenplus-plugin.version>1.4</plugin.org.codehaus.gmavenplus.gmavenplus-plugin.version>
    
  </properties>

  <organization>
    <name>Pentaho Corporation</name>
    <url>http://www.pentaho.com</url>
  </organization>

  <developers>
    <developer>
      <name>Pentaho Build Team</name>
      <email>buildteam@pentaho.com</email>
      <roles>
        <role>creator</role>
        <role>maintainer</role>
      </roles>
    </developer>
  </developers>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.pentaho.com</url>
  </issueManagement>

  <ciManagement>
    <system>Jenkins</system>
    <url>http://ci.pentaho.com</url>
  </ciManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:pentaho/maven-parent-poms.git</developerConnection>
    <tag>pentaho-ce-parent-pom-1.0.6</tag>
  </scm>

  <build>

    <plugins>
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-site-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${plugin.org.apache.maven.plugins.maven-clean-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${plugin.org.apache.maven.plugins.maven-install-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${plugin.org.apache.maven.plugins.maven-deploy-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${plugin.org.apache.maven.plugins.maven-release-plugin.version}</version>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${plugin.org.apache.maven.plugins.maven-site-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <distributionManagement>
    <repository>
      <id>pentaho.public.release.repo</id>
      <name>Pentaho Public Release Repository</name>
      <url>${pentaho.public.release.repo}</url>
    </repository>
    <snapshotRepository>
      <id>pentaho.public.snapshot.repo</id>
      <name>Pentaho Public Snapshot Repository</name>
      <url>${pentaho.public.snapshot.repo}</url>
    </snapshotRepository>
  </distributionManagement>
  
  
  <profiles>
    <profile>
      <id>ci</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>ci</name>
        </property>
      </activation>    
      <build>
        <plugins>

          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <version>${plugin.org.codehaus.gmavenplus.gmavenplus-plugin.version}</version>
            <executions>
              <execution>
                <id>clean-timestamped-snapshots</id>
                <phase>pre-clean</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <scripts>
                    <script><![CDATA[
                      import org.apache.maven.artifact.Artifact;

                      Set dependencyArtifacts = project.getArtifacts();
                      Iterator dependencyArtifactsIterator = dependencyArtifacts.iterator();
                      while(dependencyArtifactsIterator.hasNext()) {
                        Artifact artifact = (Artifact) dependencyArtifactsIterator.next();
                        if (artifact.getBaseVersion().contains("SNAPSHOT")) {
                          log.info("cleaning timestamped SNAPSHOTs from: " + artifact.getGroupId() + ":" + artifact.getArtifactId() + ":" + artifact.getBaseVersion());
                          File snapshotDir = new File ( session.localRepository.getBasedir() +
                                                        File.separator +
                                                        artifact.getGroupId().replace( ".", File.separator ) +
                                                        File.separator +
                                                        artifact.getArtifactId() +
                                                        File.separator +
                                                        artifact.getBaseVersion() );
                          File[] snapshotFiles = snapshotDir.listFiles();
                          for ( File snapshotFile : snapshotFiles ) {
                            if ( snapshotFile.getName().matches( ".*-\\d{8}.\\d{6}-.*" ) ) {
                              log.info( "    deleting: " + snapshotFile.getName() );
                              snapshotFile.delete();
                            }
                          }
                        }
                      }
                    ]]></script>
                  </scripts>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>2.4.1</version>
                <scope>runtime</scope>
              </dependency>
              <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.0.13</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
          </plugin>

        </plugins>
      </build>
      
    </profile>
  </profiles>
  
  
  <!-- ##################################################################### 
  NOTICE:  Having trouble resolving artifacts?
  Make sure you have the Pentaho Nexus repo added to your ${user.home}.m2/settings.xml
  
  <mirrors>
    <mirror>
       <id>pentaho.resolve.repo</id>
       <url>http://nexus.pentaho.org/content/groups/omni</url>
       <mirrorOf>*</mirrorOf>
    </mirror>
  </mirrors>
  
  ###################################################################### -->

</project>